package com.demo.TargetDemo;

import javax.microedition.khronos.egl.EGLConfig;
import javax.microedition.khronos.opengles.GL10;
import android.opengl.GLSurfaceView;
import android.os.Message;

import com.qualcomm.QCAR.QCAR;

public class ImageTargetsRenderer implements GLSurfaceView.Renderer{
    public boolean mIsActive = false;
    public native void initRendering();
    public native void updateRendering(int width, int height);   
    public native void renderFrame();
    
    /** Called when the surface is created or recreated. */
    public void onSurfaceCreated(GL10 gl, EGLConfig config)
    {
        initRendering();
        QCAR.onSurfaceCreated();
    }
    
    /** Called when the surface changed size. */
    public void onSurfaceChanged(GL10 gl, int width, int height)
    {
        updateRendering(width, height);
        QCAR.onSurfaceChanged(width, height);
    }
    
    /** Called to draw the current frame. */
    public void onDrawFrame(GL10 gl)
    {
        if (!mIsActive)
            return;
        renderFrame();
    }
    
    public void displayMessage(String text)
    {
    	mainActivityHandler = new Handler() {
            @Override
            public void handleMessage(Message msg) {
                switch (msg.what) {
                    case SHOW_DELETE_BUTTON:
                        if (deleteButton != null) {
                            deleteButton.setVisibility(View.VISIBLE);
                        }
                        break;
                    case HIDE_DELETE_BUTTON:
                        if (deleteButton != null) {
                            deleteButton.setVisibility(View.INVISIBLE);
                        }
                        break;
                    case TOGGLE_START_BUTTON:
                        if (startButton != null) {
                            startButton.setChecked(true);
                        }
                        break;
                    case DISPLAY_INFO_TOAST:
                        String text = (String) msg.obj;
                        int duration = Toast.LENGTH_LONG;
                        Toast toast = Toast.makeText(applicationContext, text, duration);
                        toast.show();
                        break;
                }
            }
        };
        Message message = new Message();
        message.what = 1;
        message.obj = text;
        mainActivityHandler.sendMessage(message);
    }
}
